
from facts import Desire, Response

#i=0

rule want_room:
	#agenda-group "rooms"
	when:
		$desire := Desire(id == Desire.WANT_ROOM)
	then:
		#attribute i = i + 1
		#msg = next_question()
		learn Response([], Response.KEYBOARD_ROOM_TYPES)
		
rule room_type:
	when:
		$desire := Desire(id == Desire.ESTABLISH_ROOM_TYPE)
	then:
		# Get needed data
		data = $desire.data
		
		# Modify room type in the current reservation
		reserv = reservation()
		
		msg = response_from_room_types(reserv.room_type, data["room_type"])
		learn Response(msg)
		
rule init_date:
	when:
		$desire := Desire(id == Desire.ESTABLISH_INIT_DATE) 
	then:
		# Get needed data
		data = $desire.data
		
		# Modify start date in the current reservation
		#reserv = reservation()
		#reserv.init_date = data["init_date"]
		
		msg = response_from_init_date(data["init_date"])
		
		#msg1 = Response.CONFIRM_DATE.replace("{date}", data["init_date"])
		#msg2 = next_question()
		learn Response(msg)
		
rule end_date:
	when:
		$desire := Desire(id == Desire.ESTABLISH_END_DATE)
	then:
		# Get needed data
		data = $desire.data
		
		# Modify end date in the current reservation
		reserv = reservation()
		reserv.end_date = data["end_date"]
		
		msg = Response.CONFIRM_DATE.replace("{date}", data["end_date"])
		learn Response([msg])
		
rule pension_type:
	when:
		$desire := Desire(id == Desire.ESTABLISH_PENSION_TYPE)
	then:
		# Get needed data
		data = $desire.data
		
		# Modify pension type in the current reservation
		reserv = reservation()
		reserv.pension_type = data["pension_type"]
		
		msg = Response.CONFIRM_PENSION_TYPE.replace("{pension_type}", data["pension_type"])
		
		learn Response(msg)
		
rule finish_reservation:
	when:
		$desire := Desire(id == Desire.FINISH_RESERVATION)
	then:		
		msg = Response.FINISH_RESERVATION
		learn Response([msg], None, False)
		finish_reservation()
